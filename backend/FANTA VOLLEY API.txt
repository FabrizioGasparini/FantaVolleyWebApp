FANTA VOLLEY API

= BASE URL =
http://127.0.0.1:5000/api/v1/

= PLAYERS =

GET /players/read
-> Lista dei giocatori

- Response
◦ players: Array contenete tutti i giocatori
  ◦ nome: Nome del giocatore
  ◦ ruolo: Ruolo del giocatore
  ◦ squadra: Squadra del giocatore
  ◦ squadra_id (int): Id squadra del giocatore
  ◦ numero: Numero maglia del giocatore
  ◦ nascita: Data di nascita del giocatore
  ◦ nazione: Nazionalità del giocatore
  ◦ altezza: Altezza del giocatore
  ◦ url_giocatore: Url pagina del giocatore
  ◦ url_squadra: Url pagina squadra del giocatore
  ◦ url_foto: Url foto del giocatore
  ◦ id (int): Id univoco del giocatore

---------------------------------------------

GET /players/read/<int:player_id>

-> Giocatore con determinato ID
- Response
◦ player: Giocatore cercato
  ◦ nome: Nome del giocatore
  ◦ ruolo: Ruolo del giocatore
  ◦ squadra: Squadra del giocatore
  ◦ squadra_id (int): ID squadra del giocatore
  ◦ numero: Numero maglia del giocatore
  ◦ nascita: Data di nascita del giocatore
  ◦ nazione: Nazionalità del giocatore
  ◦ altezza: Altezza del giocatore
  ◦ url_giocatore: Url pagina del giocatore
  ◦ url_squadra: Url pagina squadra del giocatore
  ◦ url_foto: Url foto del giocatore
  ◦ id (int): ID univoco del giocatore

- Errori
◦ 400 Bad Request: ID non valido

---------------------------------------------

GET /players/read/teams

-> Elenco giocatori divisi per squadra
- Response
◦ teams: Elenco squadre
  ◦ <nome_squadra>: Nome della squadra
    ◦ nome: Nome del giocatore
    ◦ ruolo: Ruolo del giocatore
    ◦ squadra: Squadra del giocatore
    ◦ squadra_id (int): ID squadra del giocatore
    ◦ numero: Numero maglia del giocatore
    ◦ nascita: Data di nascita del giocatore
    ◦ nazione: Nazionalità del giocatore
    ◦ altezza: Altezza del giocatore
    ◦ url_giocatore: Url pagina del giocatore
    ◦ url_squadra: Url pagina squadra del giocatore
    ◦ url_foto: Url foto del giocatore
    ◦ id (int): ID univoco del giocatore

---------------------------------------------

GET /players/read/teams/<int:squadra_id>

-> Elenco giocatori di una determinata squadra
- Response
◦ team: Squadra
  ◦ <nome_squadra>: Nome della squadra
    ◦ nome: Nome del giocatore
    ◦ ruolo: Ruolo del giocatore
    ◦ squadra: Squadra del giocatore
    ◦ squadra_id (int): ID squadra del giocatore
    ◦ numero: Numero maglia del giocatore
    ◦ nascita: Data di nascita del giocatore
    ◦ nazione: Nazionalità del giocatore
    ◦ altezza: Altezza del giocatore
    ◦ url_giocatore: Url pagina del giocatore
    ◦ url_squadra: Url pagina squadra del giocatore
    ◦ url_foto: Url foto del giocatore
    ◦ id (int): ID univoco del giocatore

- Errori
◦ 400 Bad Request: ID non valido

---------------------------------------------

POST /players/create/player

-> Crea un nuovo giocatore

- Parametri
  ◦ nome: Nome del giocatore
  ◦ ruolo: Ruolo del giocatore
  ◦ squadra: Squadra del giocatore
  ◦ squadra_id (int): ID squadra del giocatore
  ◦ numero: Numero maglia del giocatore
  ◦ nascita: Data di nascita del giocatore
  ◦ nazione: Nazionalità del giocatore
  ◦ altezza: Altezza del giocatore
  ◦ url_giocatore: Url pagina del giocatore
  ◦ url_squadra: Url pagina squadra del giocatore
  ◦ url_foto: Url foto del giocatore
  ◦ token: Token admin per autorizzazione

- Response
  ◦ message: "Player created"
  ◦ player: Giocatore creato
    ◦ nome: Nome del giocatore
    ◦ ruolo: Ruolo del giocatore
    ◦ squadra: Squadra del giocatore
    ◦ squadra_id: ID squadra del giocatore
    ◦ numero: Numero maglia del giocatore
    ◦ nascita: Data di nascita del giocatore
    ◦ nazione: Nazionalità del giocatore
    ◦ altezza: Altezza del giocatore
    ◦ url_giocatore: Url pagina del giocatore
    ◦ url_squadra: Url pagina squadra del giocatore
    ◦ url_foto: Url foto del giocatore
    ◦ id (int): ID univoco del giocatore

- Errori
◦ 400 Bad Request: Parametri Mancanti o Non Validi
◦ 400 Bad Request: ID non valido
◦ 401 Unauthorized: TOKEN non valido

---------------------------------------------

POST, DELETE /players/delete/player

-> Elimina un giocatore

- Parametri
  ◦ id (int): ID univoco del giocatore
  ◦ token: Token admin per autorizzazione

- Response
  ◦ message: "Player deleted successfully"

- Errori
◦ 400 Bad Request: Parametri Mancanti o Non Validi
◦ 400 Bad Request: ID non valido
◦ 401 Unauthorized: TOKEN non valido

---------------------------------------------

POST, DELETE /players/delete/team

-> Elimina tutti i giocatori di un team

- Parametri
  ◦ squadra_id (int): ID univoco del giocatore
  ◦ token: Token admin per autorizzazione

- Response
  ◦ message: "Team deleted successfully"

- Errori
◦ 400 Bad Request: Parametri Mancanti o Non Validi
◦ 400 Bad Request: ID non valido
◦ 401 Unauthorized: TOKEN non valido

=================================================

= AUTHORIZATION =

POST /auth/register
-> Registra un nuovo utente

- Parametri
  ◦ username: Username UNIVOCO dell'utente
  ◦ email: Email UNIVOCA dell'utente
  ◦ password: Password dell'utente

- Response
◦ message: "User created"
◦ user: Utente
  ◦ id (int): ID UNIVOCO dell'utente
  ◦ username: Username UNIVOCO dell'utente
  ◦ email : Email UNIVOCA dell'utente
  ◦ token: Token UNIVOCO dell'utente
  ◦ role: Ruolo dell'utente

- Errori
◦ 400 Bad Request: Parametri Mancanti o Non Validi

◦ 400 Bad Request: Password Non Valida (troppo corta)

◦ 400 Bad Request: Username Non Valido (troppo corto)
◦ 400 Bad Request: Username Non Valido (carattere non valido)
◦ 400 Bad Request: Username Non Valido (già utilizzato)

◦ 400 Bad Request: Email Non Valida
◦ 400 Bad Request: Email Non Valida (già utilizzata)

---------------------------------------------

POST /auth/login
-> Accede ad un account di un utente

- Parametri
  ◦ username: Username UNIVOCO dell'utente
  ◦ password: Password dell'utente

- Response
◦ login: "True"
◦ user: Utente
  ◦ id (int): ID UNIVOCO dell'utente
  ◦ username: Username UNIVOCO dell'utente
  ◦ email : Email UNIVOCA dell'utente
  ◦ token: Token UNIVOCO dell'utente
  ◦ role: Ruolo dell'utente

- Errori
◦ 400 Bad Request: Parametri Mancanti o Non Validi

◦ 404 Not Found: Utente non trovato

---------------------------------------------

GET, POST /auth/read/user
-> Legge i dati di un utente

- Parametri
  ◦ token: Token UNIVOCO dell'utente

- Response
◦ user: Utente
  ◦ id (int): ID UNIVOCO dell'utente
  ◦ username: Username UNIVOCO dell'utente
  ◦ email : Email UNIVOCA dell'utente
  ◦ token: Token UNIVOCO dell'utente
  ◦ role: Ruolo dell'utente

- Errori
◦ 400 Bad Request: Parametri Mancanti o Non Validi

◦ 401 Unauthorized: Invalid Token

---------------------------------------------

DELETE, POST /auth/delete/user
-> Rimuove un utente

- Parametri
  ◦ password: Token UNIVOCO dell'utente
  ◦ token: Token UNIVOCO dell'utente

- Response
◦ message: "User deleted successfully"

- Errori
◦ 400 Bad Request: Parametri Mancanti o Non Validi

◦ 401 Unauthorized: Invalid Token or Password

◦ 500 Server Error: Errore durante la "scadenza" del Token


=================================================

= LEAGUES =

POST /leagues/create

-> Crea una nuova lega

- Parametri
  ◦ name: Nome della lega
  ◦ token: Token del creatore della lega

- Response
  ◦ message: "League created"
  ◦ league: Lega creata
    ◦ nome: Nome della lega
    ◦ invite_code: Codice per partecipare alla lega
    ◦ owner_token: Token del creatore della lega
    ◦ participants: Partecipanti alla lega
      ◦ <token>: Token del partecipante
    ◦ id (int): ID univoco della lega

- Errori
◦ 400 Bad Request: Parametri Mancanti o Non Validi
◦ 401 Unauthorized: TOKEN non valido

---------------------------------------------

POST /leagues/join

-> Unisciti ad una lega

- Parametri
  ◦ invite_code: Codice per partecipare alla lega
  ◦ token: Token dell'utente che vuole partecipare

- Response
  ◦ message: "League joined successfully"
  ◦ league: Lega creata
    ◦ nome: Nome della lega
    ◦ invite_code: Codice per partecipare alla lega
    ◦ owner_token: Token del creatore della lega
    ◦ participants: Partecipanti alla lega
      ◦ <token>: Token del partecipante
    ◦ id (int): ID univoco della lega

- Errori
◦ 400 Bad Request: Parametri Mancanti o Non Validi
◦ 400 Bad Request: Già partecipante della lega
◦ 401 Unauthorized: TOKEN non valido
◦ 405 Not Found: Lega non trovata

---------------------------------------------

DELETE, POST /leagues/delete

-> Cancellare una lega

- Parametri
  ◦ invite_code: Codice per partecipare alla lega
  ◦ token: Token del creatore della lega

- Response
  ◦ message: "League deleted successfully"

- Errori
◦ 400 Bad Request: Parametri Mancanti o Non Validi
◦ 401 Unauthorized: TOKEN non valido
◦ 405 Not Found: Lega non trovata

---------------------------------------------

POST /leagues/read

-> Leggere i dati di una lega

- Parametri
  ◦ invite_code: Codice per partecipare alla lega
  ◦ token: Token del creatore della lega

- Response
  ◦ league: Lega creata
    ◦ nome: Nome della lega
    ◦ invite_code: Codice per partecipare alla lega
    ◦ owner_token: Token del creatore della lega
    ◦ participants: Partecipanti alla lega
      ◦ <token>: Token del partecipante
    ◦ id (int): ID univoco della lega

- Errori
◦ 400 Bad Request: Parametri Mancanti o Non Validi
◦ 401 Unauthorized: TOKEN non valido
◦ 401 Unauthorized: Utente non partecipa alla lega
◦ 405 Not Found: Lega non trovata

---------------------------------------------